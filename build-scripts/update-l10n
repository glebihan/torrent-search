#! /usr/bin/env python3
# -*- Mode: Python; indent-tabs-mode: nil; tab-width: 4; coding: utf-8 -*-

import os
import subprocess
import json

if __name__ == "__main__":
    path = os.path.split(os.path.split(__file__)[0])[0]
    
    pot_file = os.path.join(path, "l10n", "torrent-search.pot")
    
    if os.path.exists(pot_file):
        os.unlink(pot_file)
    
    f = open(os.path.join(path, "data", "settings.json"))
    settings_json = json.loads(f.read())
    f.close()
    f = open(os.path.join(path, "data", "settings.json.py"), "w")
    for section in settings_json["settings"]:
        for option in settings_json["settings"][section]:
            if "label" in option:
                f.write("_(\"%s\")\n" % option["label"].replace("\"", "\\\""))
            if "preferences_subsection" in option:
                f.write("_(\"%s\")\n" % option["preferences_subsection"].replace("\"", "\\\""))
            if "filters_section" in option:
                f.write("_(\"%s\")\n" % option["filters_section"].replace("\"", "\\\""))
    f.close()
    
    for filename in subprocess.check_output(["find", path, "-name", "*.py"]).splitlines():
        filename = filename.decode("utf-8")
        params = ["xgettext", "--language=Python", "--keyword=_", "--output", pot_file, filename]
        if os.path.exists(pot_file):
            params.append("-j")
        subprocess.call(params)
    
    os.unlink(os.path.join(path, "data", "settings.json.py"))
    
    f = open(pot_file)
    contents = f.read()
    f.close()
    contents = contents.replace("settings.json.py", "settings.json")
    f = open(pot_file, "w")
    f.write(contents)
    f.close()
    
    for filename in subprocess.check_output(["find", os.path.join(path, "l10n"), "-name", "*.po"]).splitlines():
        filename = filename.decode("utf-8")
        subprocess.call(["msgfmt", filename, "-o", filename[:-3] + ".mo"])
